{"version":3,"file":"preload.js","sources":["../../src/main/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer } from 'electron'\r\n\r\n// 定义API接口\r\nexport interface ElectronAPI {\r\n  getVersion: () => Promise<string>\r\n  openFileDialog: () => Promise<Electron.OpenDialogReturnValue>\r\n  saveFileDialog: (defaultPath: string) => Promise<Electron.SaveDialogReturnValue>\r\n  onMenuAction: (callback: (action: string) => void) => void\r\n  removeAllListeners: (channel: string) => void\r\n}\r\n\r\n// 暴露受保护的方法给渲染进程\r\nconst electronAPI: ElectronAPI = {\r\n  getVersion: () => ipcRenderer.invoke('app:getVersion'),\r\n  openFileDialog: () => ipcRenderer.invoke('dialog:openFile'),\r\n  saveFileDialog: (defaultPath: string) => ipcRenderer.invoke('dialog:saveFile', defaultPath),\r\n  onMenuAction: (callback) => ipcRenderer.on('menu-action', (_, action) => callback(action)),\r\n  removeAllListeners: (channel) => ipcRenderer.removeAllListeners(channel)\r\n}\r\n\r\n// 在window对象上暴露API\r\ncontextBridge.exposeInMainWorld('electronAPI', electronAPI)\r\n\r\n// 类型声明\r\ndeclare global {\r\n  interface Window {\r\n    electronAPI: ElectronAPI\r\n  }\r\n}"],"names":["ipcRenderer","contextBridge"],"mappings":";;AAYA,MAAM,cAA2B;AAAA,EAC/B,YAAY,MAAMA,SAAAA,YAAY,OAAO,gBAAgB;AAAA,EACrD,gBAAgB,MAAMA,SAAAA,YAAY,OAAO,iBAAiB;AAAA,EAC1D,gBAAgB,CAAC,gBAAwBA,SAAAA,YAAY,OAAO,mBAAmB,WAAW;AAAA,EAC1F,cAAc,CAAC,aAAaA,SAAAA,YAAY,GAAG,eAAe,CAAC,GAAG,WAAW,SAAS,MAAM,CAAC;AAAA,EACzF,oBAAoB,CAAC,YAAYA,SAAAA,YAAY,mBAAmB,OAAO;AACzE;AAGAC,SAAAA,cAAc,kBAAkB,eAAe,WAAW;"}